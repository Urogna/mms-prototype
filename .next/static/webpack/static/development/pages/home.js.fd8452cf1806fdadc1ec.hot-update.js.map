{"version":3,"file":"static/webpack/static/development/pages/home.js.fd8452cf1806fdadc1ec.hot-update.js","sources":["webpack:///./components/form.tsx"],"sourcesContent":["import Gun from 'gun'\nimport React, {useState} from 'react'\nimport produce from 'immer'\nimport '../public/static/output.css';\nimport Router from 'next/router'\n\nexport const RegisterForm = ({color}) => {\n    let gun = Gun()\n    let user, email, pass\n    const setUser = (value) => {user = value}\n    const setEmail = (value) => {email = value}\n    const setPass = (value) => {pass = value}\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        gun.get(user).put({username: user, email: email, password: pass})\n        console.log(user, pass)\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <p>\n                <InputBox name=\"Username\" set={setUser}  color={color}/>\n                <InputBox name=\"Email\"    set={setEmail} color={color}/>\n                <InputBox name=\"Password\" set={setPass}  color={color}/>\n                <Submit text=\"Register\" color={color}/>\n            </p>\n        </form>\n    )\n}\n\nexport const LoginForm = ({color}) => {\n    let gun = Gun()\n    let user, email, pass\n    const setUser = (value) => {user = value}\n    const setPass = (value) => {pass = value}\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        gun.get(user).on((data, key) => {\n            user = data.username\n            email = data.email\n            pass = data.password\n        })\n        console.log([user, email, pass])\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <p>\n                <InputBox name=\"Username\" set={setUser} color={color}/>\n                <InputBox name=\"Password\" set={setPass} color={color}/>\n                <Submit text=\"Login\" color={color}/>\n            </p>\n        </form>\n    )\n}\n\nexport const StartForm = ({color}) => {\n    const handleSubmit = (event) => {\n        Router.push('/home')\n    }\n    const submit = `p-1 w-1/3 text-2xl border-2 border-${color}-800 bg-transparent hover:bg-${color}-700 hover:text-white ml-1/3 my-2 rounded-full active:bg-${color}-900 focus:outline-none`\n    return (\n        <form onSubmit={handleSubmit} className={`bg-${color}-400 rounded pb-4 w-full`}> \n            <img src=\"/static/immobilapp.png\" className=\"w-2/3 ml-1/6 py-8\"/>\n            <Box name=\"Place\" color={color} placeholder=\"City or ZIP\"/>\n            <DoubleBox name=\"Price\" color={color} first=\"From\" second=\"To\"/>\n            <Box name=\"Radius\" color={color} placeholder=\"in Km\"/>\n            <Box name=\"Rooms\" color={color} placeholder=\"e.g.1.5\"/>\n            <button\n                className={submit}>\n                <a href=\"/home\"\n                Search>\n                </a>\n            </button>\n        </form>\n    )\n}\n\nexport const FilsterForm = ({color}) => {\n    const handleSubmit = (event) => {\n        Router.push('/home')\n    }\n    const submit = `p-1 w-1/3 text-2xl border-2 border-${color}-800 bg-transparent hover:bg-${color}-700 hover:text-white ml-1/3 my-2 rounded-full active:bg-${color}-900 focus:outline-none`\n    return (\n        <form onSubmit={handleSubmit} className={`bg-${color}-400 rounded pb-4 w-full`}> \n            <img src=\"/static/immobilapp.png\" className=\"w-2/3 ml-1/6 py-8\"/>\n            <Box name=\"Place\" color={color} placeholder=\"City or ZIP\"/>\n            <DoubleBox name=\"Price\" color={color} first=\"From\" second=\"To\"/>\n            <Box name=\"Radius\" color={color} placeholder=\"in Km\"/>\n            <Box name=\"Rooms\" color={color} placeholder=\"e.g.1.5\"/>\n            <a href=\"/home\"\n                className={submit}>\n                Search\n            </a>\n        </form>\n    )\n}\n\nconst DoubleBox = ({name, color, first, second}) => {\n    const css = `bg-${color}-400 h-auto w-full rounded overflow-hidden`\n    return (\n        <div>\n            <p  className={css}>\n                <p className={`h-auto text-2xl text-center w-1/2 float-left`}>\n                    {name}\n                </p>\n                <p className=\"w-1/2 float-right\">\n                    <input  type=\"text\"\n                            className={`bg-${color}-200 text-base placeholder-blue-700 text-center h-10 w-2/6 rounded-full px-1 border-2 border-${color}-600`}\n                            placeholder={first}>\n                    </input>\n                    <input  type=\"text\"\n                            className={`bg-${color}-200 text-base placeholder-blue-700 text-center h-10 w-2/6 rounded-full px-1 border-2 border-${color}-600`}\n                            placeholder={second}>\n                    </input>\n                </p>\n            </p>\n        </div>\n    )\n}\n\nconst Box = ({name, color, placeholder}) => {\n    const css = `bg-${color}-400 h-auto w-full rounded`\n\n    return (\n        <div>\n\n            <p  className={css}>\n                \n                <p className={`h-auto text-2xl text-center w-1/2 float-left`}>\n                    {name}\n                </p>\n                <p className=\"w-1/2 float-right\">\n                    <input  type=\"text\"\n                            className={`bg-${color}-200 text-base placeholder-blue-700 text-center h-10 w-2/3 rounded-full border-2 border-${color}-600`}\n                            placeholder={placeholder}>\n                    </input>\n                </p>\n            </p>\n        </div>\n    )\n}\n\nconst InputBox = ({name, set, color}) => {\n    const css = `px-2 bg-${color}-400 h-auto w-full rounded`\n\n    return (\n        <p  className={css}>\n            \n            <TextDisplay text={name}/>\n            <Input set={set} color={color}/>\n        </p>\n    )\n}\n\nconst TextDisplay = ({text}) => {\n    const css = `h-auto text-2xl`\n    return (\n        <p className={css}>\n            {text}\n        </p>\n    )\n}\n\nconst Input = ({set, color}) => {\n    const css = `bg-${color}-200 text-xl h-10 w-full rounded px-1 border-2 border-${color}-600`\n    const handleChange = ({target}) => {set(target.value)}\n    return (\n        <p>\n            <input  type=\"text\"\n                    onChange={handleChange}\n                    className={css}>\n            </input>\n        </p>\n    )\n}\n\nconst Submit = ({text, color}) => {\n    const css = `p-1 w-32 text-2xl border-2 border-${color}-800 bg-transparent hover:bg-${color}-700 hover:text-white ml-1/4 my-2 rounded active:bg-${color}-900 focus:outline-none`\n\n    return (\n        <button type=\"submit\"\n            className={css}>\n            {text}\n        </button>\n    )\n}\n//onClick={e => e.stopPropagation() }>\n\n//export default {RegisterForm, LoginForm}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAGA;;;;A","sourceRoot":""}